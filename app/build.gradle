plugins {
    id "org.sonarqube" version "2.6.1"
}

apply plugin: 'com.android.application'
apply plugin: 'jacoco'

// sonarqube properties
sonarqube {
    properties {
        property "sonar.projectKey", "gaganpreet4423_PopularArticles"
        property "sonar.organization", "gaganpreet4423-github"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.login", "4bad7da2295c635cf0c7cc276a41eba1c07266c3"
        property "sonar.android.lint.report", "build/outputs/lint-results.xml"

        property "sonar.sources", "src/main/java"
        property "sonar.binaries", "build/intermediates/classes/debug"
        property "sonar.java.binaries", "build/intermediates/classes/debug"
        property "sonar.tests", "src/test/java, src/androidTest/java"
        property "sonar.java.test.binaries", "build/intermediates/classes/debug"

        def unit = fileTree(dir: project.projectDir, includes: ['**/*.exec']).files;
        def ui = fileTree(dir: project.projectDir, includes: ['**/*.ec']).files;
        unit.addAll(ui);
        def files = unit.join(", ");

        property "sonar.jacoco.reportPaths", files
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.junit.reportsPaths", "build/test-results/testDebugUnitTest"
        property "sonar.android.lint.report", "build/reports/lint-results.xml"
    }
}
android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.nagarro.nytimesarticle"
        minSdkVersion 15
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
        }
    }
}

jacoco {
    version "0.7.1.201405082137"
}

jacoco {
    toolVersion = "0.7.6.201602180812"
}

// task to generate test and code-coverage report
task createTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {
    group = "Reporting"

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class',
                      '**/R$*.class',
                      '**/BuildConfig.*',
                      '**/*$ViewInjector*.*',
                      '**/*$ViewBinder*.*',
                      '**/*$MembersInjector*.*',
                      '**/Manifest*.*',
                      '**/*Test*.*',
                      'android/**/*.*']
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/dev/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java/com/nagarro/nytimesarticle/presenter"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])

    executionData = files("${project.buildDir}/jacoco/testDevDebugUnitTest.exec")
}

// task to build the project
tasks.create('make').dependsOn('build')
// task to analyze code using lint
tasks.create('analyze').dependsOn('lint')
// task to build the project, analyze
tasks.create('automate').dependsOn('build', 'lint', 'testDebugUnitTest', 'createDebugCoverageReport')
// set dependency of sonarqube task
tasks.sonarqube.dependsOn('automate')

def supportLibVersion = "27.1.1"
def retrofitLibVersion = "2.4.0"
def glideLibVersion = "4.7.1"

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.android.support:appcompat-v7:$supportLibVersion"
    implementation "com.android.support:support-v4:$supportLibVersion"
    implementation "com.android.support:recyclerview-v7:$supportLibVersion"
    implementation "com.android.support:design:$supportLibVersion"
    implementation "com.android.support:cardview-v7:$supportLibVersion"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.7.22'
    androidTestImplementation 'org.mockito:mockito-android:2.7.22'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'

    // gson
    implementation 'com.google.code.gson:gson:2.8.2'
    // retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitLibVersion"
    implementation "com.squareup.retrofit2:retrofit:$retrofitLibVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitLibVersion"
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.1'
    // glide
    implementation "com.github.bumptech.glide:glide:$glideLibVersion"
    annotationProcessor "com.github.bumptech.glide:compiler:$glideLibVersion"
}
